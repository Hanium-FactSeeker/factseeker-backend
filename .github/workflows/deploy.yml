name: CI/CD - Deploy to EC2 (Docker)

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Docker login
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Docker build & push (tag with sha and latest)
        env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/factseeker-backend
        run: |
          docker build -t $IMAGE_NAME:${{ github.sha }} -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest

      - name: Deploy to EC2 via SSH (run with env-file and dev profile)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/factseeker-backend:${{ github.sha }}"
            APP_DIR="/home/ubuntu/app"
            mkdir -p $APP_DIR

            # .env 생성 (멀티라인 시크릿 안전)
            printf "%s" "${{ secrets.APP_ENV }}" | sudo tee "$APP_DIR/.env" >/dev/null

            sudo docker pull "$IMAGE"
            sudo docker stop app || true
            sudo docker rm app || true

            sudo docker run -d \
              --name app \
              --restart unless-stopped \
              --env-file "$APP_DIR/.env" \
              -e SPRING_PROFILES_ACTIVE=dev \
              -p 8080:8080 \
              "$IMAGE"

            sudo docker image prune -f